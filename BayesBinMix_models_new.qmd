---
title: "BayesBinMix Census Data (New models)"
author: "Carmen B. Rodriguez"
format: html
editor: visual
table-of-contents: true
tbl-cap-location: top
---

```{r}
#| warning: false
#| output: false
#Load packages
library(tidyverse)
library(Hmisc)
library(reshape2)
library(ggplot2)
library(psych)
library(table1)
library(tableone)
library(Hmisc)
library(BayesBinMix)
library(foreach)
library(label.switching)
library(doParallel)
library(coda)
library(DescTools)
library(MCMCvis)
library(knitr)
library(forcats)
library(gmodels)
```

```{r}
#Load census data and results from latest model
censusdata_bin <- readRDS("./censusdata_bin_rownames.rds")
censusdata<- load("./censusdata_updated.RData")
agedist<-load("./census_age_dist.RData")
names(censusdata_bin) <- c("acs5_2010_bin","acs5_2015_bin","acs5_2019_bin")

#These models
res_all<-readRDS("./ACSall_3.10.24.rds")
res_acs10<-res_all$res_acs10_50
res_acs15<-res_all$res_acs15_50
res_acs19<-res_all$res_acs19_50
```

```{r}
#| eval = false
print(res_acs10)
print(res_acs15)
print(res_acs19)
```

### **Plots** and Patterns for ACS 2006-2010

```{r}
#Import functions from plots.R
source("plots.R")
#source("/Users/carmenrodriguez/Desktop/Research Projects/BayesBinMix/ecbayesbinmix/plots.R")
library(viridis)
sesvars<-c("Two People Per Room","Lack of complete Plumbing", "Median Household Income", ">= Bacherlor's Degree", "Below Poverty Line", "< High School",
           "Female Household", ">= High School","No Vehicle","Owner", "Renter", "Unemployment","White Collar Occupation", "SNAP Benefits")


# Other color options
viridis_palette <- viridis(14)
custom_colors <- c("#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", 
                   "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf",
                   "#ff0000", "#00ff00", "#0000ff", "#ffff00")

group_cols<-c("#1f77b4","#2ca02c","salmon1", "#bcbd22")


# Generate 14 pastel colors for ungrouped graph
pastel_palette1 <- generate_pastel_colors(14)
```

```{r}
#| layout-ncol: 1
#| fig-width: 10
#| fig-height: 10
#| fig-cap: 
#|   - "Individual Neighborhood SES variables"
#|   -  "Neighborhood  SES variables Domains"
#Kmax = 50
mapK<-Mode(res_acs10$K.mcmc)[1]  #tells you mapK

fig_title = paste("Success Probabilities when mapK=", mapK, sep="")

dat_10<-preparedat_fig(res_acs10,mapK,sesvars)

p_10_indiv<-plot_thetakj_indiv(prob_est_long = dat_10, mapK,color_palette = pastel_palette1, fig_title)

p_10_group<-plot_thetakj_group(prob_est_long = dat_10, mapK,color_palette = group_cols, fig_title)

p_10_heatmap<- plot_thetakj_heatmap(prob_est_long = dat_10, fig_title)
p_10_heatmap2<- plot_thetakj_heatmap_r(prob_est_long = dat_10, fig_title)

#p_10_group_flipped<-plot_thetakj_group_flipped(prob_est_long = dat_10, mapK,color_palette = group_cols, fig_title)


p_10_indiv
p_10_group
p_10_heatmap

```

#### **Cluster mixing weights estimates**

```{r}
#Class probabilities
stats<-cbind(summary(res_acs10$parameters.ecr.mcmc)$statistics[,c(1,2)], 
             summary(res_acs10$parameters.ecr.mcmc)$quantiles[,c(1,5)])

tail(round(stats, 2), mapK) %>% kable()
```

#### Age and Race/Ethnicity Distribution of the census tracts by cluster assignment

```{r}
#For ACS 2010 and mapK = 9
mapK<-Mode(res_acs10$K.mcmc)[1]  #tells you mapK
classificationprobs_10<-res_acs10$classificationProbabilities.ecr
# Add cluster classification based on maximum probability 
maxProb<-apply(classificationprobs_10, 1, max)
ClusterAssignment<-res_acs10$clusterMembershipPerMethod[,2]

classificationprobs_10$ClusterAssignment<-ClusterAssignment
classificationprobs_10$maxProb<-maxProb

#Prep Data
classificationprobs_10$GEOID<-row.names(censusdata_bin$acs5_2010_bin)


classificationprobs_10$ClusterAssignment<- factor(classificationprobs_10$ClusterAssignment, levels = 1:9, labels = paste0("cluster", 1:9, sep= " "))

dat10_clusters<- classificationprobs_10 %>% select(GEOID,ClusterAssignment, maxProb)

racedist_10<-acs5_2010_wide %>% select(GEOID, Hispanic_or_Latino_2010,NonHispanicWhite_2010, NonHispanicBlack_2010, NonHispanicAsian_2010, NH_two_or_more_races_2010)

#merge age dist + race dist with cluster information-- these are proportions
merged10<- merge(dat10_clusters, agedist10_wide, by = "GEOID")
merged10<-merge(merged10, racedist_10, by = "GEOID")
table1::table1(~  age_median + age_20_24 + age_25_34 + age_35_44 + age_45_54 + age_55_59 + age_60_64 + age_65_74 + age_75_84 + age_85_more + Hispanic_or_Latino_2010 + NonHispanicWhite_2010 + NonHispanicBlack_2010 + NonHispanicAsian_2010+ NH_two_or_more_races_2010  |ClusterAssignment, data= merged10, overall = F)

```

#### Distribution of assignment probabilities to the most probable cluster

```{r}

merged10 %>%  ggplot(aes(x = ClusterAssignment, y = maxProb, fill = ClusterAssignment)) +
  geom_boxplot() +
  labs(fill = "Cluster Assignment", 
       y = "Assignment Probability after ECR algorithm", 
       x= "")

dattable<- merged10 %>% rename(`Average Assignment Probability (ECR Algorithm)` = maxProb,
                    `Cluster Assignment` = ClusterAssignment) 

table1::table1(~`Average Assignment Probability (ECR Algorithm)` |`Cluster Assignment`, data= dattable, overall = F)

```

### **Plots** and Patterns for ACS 2011-2015

```{r}
#| layout-ncol: 1
#| fig-width: 10
#| fig-height: 10
#| fig-cap: 
#|   - "Individual Neighborhood SES variables"
#|   -  "Neighborhood  SES variables Domains"
mapK<-Mode(res_acs15$K.mcmc)[1]  #tells you mapK

fig_title = paste("Success Probabilities when mapK=", mapK, sep="")

dat_15<-preparedat_fig(res_acs15,mapK,sesvars)
p_15_indiv<-plot_thetakj_indiv(prob_est_long = dat_15, mapK,color_palette = pastel_palette1, fig_title)
p_15_group<-plot_thetakj_group(prob_est_long = dat_15, mapK,color_palette = group_cols, fig_title)
p_15_heatmap<- plot_thetakj_heatmap(prob_est_long = dat_15, fig_title)
p_15_heatmap1<- plot_thetakj_heatmap_r(prob_est_long = dat_15, fig_title)
#p_15_indiv
p_15_group
p_15_heatmap
p_15_heatmap1
```

#### **Cluster mixing weights estimates**

```{r}
#Class probabilities
stats<-cbind(summary(res_acs15$parameters.ecr.mcmc)$statistics[,c(1,2)], summary(res_acs15$parameters.ecr.mcmc)$quantiles[,c(1,5)])

tail(stats, mapK) %>% kable()
```

#### Age and Race/Ethnicity Distribution of the census tracts by cluster assignment

```{r}
#For ACS 2015 and mapK = 9
classificationprobs_15<-res_acs15$classificationProbabilities.ecr
# Add cluster classification based on maximum probability 
maxProb<-apply(classificationprobs_15, 1, max)
ClusterAssignment<-res_acs15$clusterMembershipPerMethod[,2]

classificationprobs_15$ClusterAssignment<-ClusterAssignment
classificationprobs_15$maxProb<-maxProb

#Prep Data 
classificationprobs_15$GEOID<-row.names(censusdata_bin$acs5_2015_bin)


classificationprobs_15$ClusterAssignment<- factor(classificationprobs_15$ClusterAssignment, levels = 1:9, labels = paste0("cluster", 1:9, sep= " "))


dat15_clusters<- classificationprobs_15 %>% select(GEOID,ClusterAssignment, maxProb)


racedist_15<-acs5_2015_wide %>% select(GEOID, Hispanic_or_Latino_2015,NonHispanicWhite_2015, NonHispanicBlack_2015, NonHispanicAsian_2015, NH_two_or_more_races_2015)

#merge age dist + race dist with cluster information-- these are proportions
merged15<- merge(dat15_clusters, agedist15_wide, by = "GEOID")
merged15<-merge(merged15, racedist_15, by = "GEOID")
table1::table1(~  age_median + age_20_24 + age_25_34 + age_35_44 + age_45_54 + age_55_59 + age_60_64 + age_65_74 + age_75_84 + age_85_more + Hispanic_or_Latino_2015 + NonHispanicWhite_2015 + NonHispanicBlack_2015 + NonHispanicAsian_2015+ NH_two_or_more_races_2015  |ClusterAssignment, data= merged15, overall = F)
```

#### Distribution of assignment probabilities to the most probable cluster

```{r}
merged15 %>% ggplot(aes(x = ClusterAssignment, y = maxProb, fill = ClusterAssignment)) +
  geom_boxplot() +
  labs(fill = "Cluster Assignment", 
       y = "Assignment Probability after ECR algorithm", 
       x= "")

dattable15<-merged15 %>% rename(`Average Assignment Probability (ECR Algorithm)` = maxProb,
                    `Cluster Assignment` = ClusterAssignment) 

table1::table1(~`Average Assignment Probability (ECR Algorithm)` |`Cluster Assignment`, 
               data= dattable15, overall = F)

```

```{r}
#Looking at clusters 1 and 2 in comparison to acs 2006-2010
table(merged10$ClusterAssignment, merged15$ClusterAssignment)


# cluster 2 cts were classified as cluster 4 and cluster 8 on the previous year
#25013812902 (Census Tract 8129.02, Hampden County, Massachusetts) & 25021415102 (Census Tract 4151.02, Norfolk County, Massachusetts)

merged10 %>% filter(GEOID %in% c("25013812902","25021415102"))


```

### **Plots** and Patterns for ACS 2015-2019

```{r}
#| layout-ncol: 1
#| fig-width: 10
#| fig-height: 10
#| fig-cap: 
#|   - "Individual Neighborhood SES variables"
#|   -  "Neighborhood  SES variables Domains"
mapK<-Mode(res_acs19$K.mcmc)[1]  #tells you mapK

fig_title = paste("Success Probabilities when mapK=", mapK, sep="")

dat_19<-preparedat_fig(res_acs19,mapK,sesvars)
p_19_indiv<-plot_thetakj_indiv(prob_est_long = dat_19, mapK,color_palette = pastel_palette1, fig_title)
p_19_group<-plot_thetakj_group(prob_est_long = dat_19, mapK,color_palette = group_cols, fig_title)
p_19_heatmap<-plot_thetakj_heatmap(prob_est_long = dat_19, fig_title)
p_19_heatmap1<-plot_thetakj_heatmap_r(prob_est_long = dat_19, fig_title)
#p_19_indiv
p_19_group
p_19_heatmap
p_19_heatmap1



```

#### **Cluster mixing weights estimates**

```{r}
#Class probabilities
stats<-cbind(summary(res_acs19$parameters.ecr.mcmc)$statistics[,c(1,2)], summary(res_acs19$parameters.ecr.mcmc)$quantiles[,c(1,5)])

tail(stats, mapK) %>% kable()
```

#### Age and Race/Ethnicity Distribution of the census tracts by cluster assignment

```{r}
#For ACS 2015 and mapK = 4
classificationprobs_19<-res_acs19$classificationProbabilities.ecr
# Add cluster classification based on maximum probability 
maxProb<-apply(classificationprobs_19, 1, max)
ClusterAssignment<-res_acs19$clusterMembershipPerMethod[,2]

classificationprobs_19$ClusterAssignment<-ClusterAssignment
classificationprobs_19$maxProb<-maxProb

#Prep Data 
classificationprobs_19$GEOID<-row.names(censusdata_bin$acs5_2019_bin)

classificationprobs_19$ClusterAssignment<- factor(classificationprobs_19$ClusterAssignment, levels = 1:8, labels = paste0("cluster", 1:8, sep= " "))


dat19_clusters<- classificationprobs_19 %>% select(GEOID,ClusterAssignment, maxProb)


racedist_19<-acs5_2019_wide %>% select(GEOID, Hispanic_or_Latino_2019,NonHispanicWhite_2019, NonHispanicBlack_2019, NonHispanicAsian_2019, NH_two_or_more_races_2019)

#merge age dist + race dist with cluster information-- these are proportions
merged19<- merge(dat19_clusters, agedist15_wide, by = "GEOID")
merged19<-merge(merged19, racedist_19, by = "GEOID")

table1::table1(~  age_median + age_20_24 + age_25_34 + age_35_44 + age_45_54 + age_55_59 + age_60_64 + age_65_74 + age_75_84 + age_85_more + Hispanic_or_Latino_2019 + NonHispanicWhite_2019 + NonHispanicBlack_2019 + NonHispanicAsian_2019 + NH_two_or_more_races_2019  |ClusterAssignment, data= merged19, overall = F)
```

#### Distribution of assignment probabilities to the most probable cluster

```{r}
merged19%>%  ggplot(aes(x = ClusterAssignment, y = maxProb, fill = ClusterAssignment)) +
  geom_boxplot() +
  labs(fill = "Cluster Assignment", 
       y = "Assignment Probability after ECR algorithm", 
       x= "")

dattable19<-merged19 %>% rename(`Average Assignment Probability (ECR Algorithm)` = maxProb,
                    `Cluster Assignment` = ClusterAssignment) 

table1::table1(~`Average Assignment Probability (ECR Algorithm)` |`Cluster Assignment`, 
               data= dattable19, overall = F)

```

```{r}
#Looking at clusters 1 and 2 in comparison to acs 2006-2010
table(merged10$ClusterAssignment, merged19$ClusterAssignment)

table(merged15$ClusterAssignment, merged19$ClusterAssignment)



```
